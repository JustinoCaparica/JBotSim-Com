--output CooperativeForaging-NonSocial

--robots
 classname=simulation.robot.DifferentialDriveRobot,
	distancewheels=0.052,
	diameter=0.074,
	messenger=SocialParser,
	enableRandomizenumber=1,
	randomizenumber=(
		2,
		2,
		2
	),
	sensors=(
		RobotSensor_1=(
			classname=simulation.robot.sensors.RobotSensor,
			range=0.80,
			numbersensors=4,
			angle=90,
			seeDisabledRobots=0,
			id=1
		),
		PreySensor_2=(
			classname=simulation.robot.sensors.PreySensor,
			range=0.28,
			numbersensors=2,
			angle=90,
			eyes=1,
			id=2
		),
		NestRangeAndBearingSensor_3=(
			classname=simulation.robot.sensors.NestRangeAndBearingSensor,
			id=3
		),
		InNestSensor_4=(
			classname=simulation.robot.sensors.InNestSensor,
			id=4
		),
		TwoWheelActuatorEnergySensor_5=(
			classname=simulation.robot.sensors.TwoWheelActuatorEnergySensor,
			wheelSpeedUnits=2,
			wheelsMaxSpeedLowEnergyFactor=0,
			id=5
		)
	),
	actuators=(
		TwoWheelActuator_1=(
			classname=simulation.robot.actuators.TwoWheelActuator,
			id=1
		)
	)

--controllers
 classname=evolutionaryrobotics.neuralnetworks.NeuralNetworkController,
	network=(
		classname=evolutionaryrobotics.evolution.neat.NEATNeuralNetwork,
		inputs=(
			RobotNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.SensorNNInput,
				id=1
			),
			PreyNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.SensorNNInput,
				id=2
			),
			NestRangeAndBearingNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.NestRangeAndBearingNNInput,
				id=3
			),
			InNestNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.SensorNNInput,
				id=4
			),
			TwoWheelActuatorEnergyNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.TwoWheelActuatorEnergyNNInput,
				id=5
			)
		),
		outputs=(
			TwoWheelNNOutput=(
				classname=evolutionaryrobotics.neuralnetworks.outputs.TwoWheelNNOutput,
				id=1
			)
		)
	)

--population
 classname=evolutionaryrobotics.populations.NEATPopulation,
	generations=400,
	size=150,
	samples=5

--environment
 classname=simulation.environment.CooperativeForagingEnvironment,
	nestlimit=0.2,
	foragelimit=4,
	densityofpreysValues=(
		0.25,
		0.25
	),
	width=7,
	height=7,
	steps=4500,
	preyMass=1000

--executor classname=ParallelTaskExecutor

--evolution classname=evolutionaryrobotics.evolution.NEATEvolution

--evaluation classname=evolutionaryrobotics.evaluationfunctions.CooperativeForagingEvaluationFunction

--random-seed 1

