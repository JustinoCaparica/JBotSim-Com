--executor
	classname=taskexecutor.ConillonTaskExecutor
--output
	CollectiveForraging-Social-MultipleTeams6
--evolution
	classname=evolutionaryrobotics.evolution.NEATEvolution
--robots
	classname=simulation.robot.DifferentialDriveRobot,
	distancewheels=0.052,
	diameter=0.074,
	messenger=SocialParser,
	numberofrobots=4,
	sensors=(
		RecruitedSensor_1=(
			classname=simulation.robot.sensors.RecruitedSensor,
			id=1
		),
		RecruiterSensor_2=(
			classname=simulation.robot.sensors.RecruiterSensor,
			id=2
		),
		FocusingOnSensor_3=(
			classname=simulation.robot.sensors.FocusingOnSensor,
			id=3
		),
		FocusedBySensor_4=(
			classname=simulation.robot.sensors.FocusedBySensor,
			id=4
		),
		RobotSensor_5=(
			classname=simulation.robot.sensors.RobotSensor,
			range=0.80,
			numbersensors=8,
			angle=45,
			id=5
		),
		PreySensor_6=(
			classname=simulation.robot.sensors.PreySensor,
			range=0.28,
			numbersensors=2,
			angle=90,
			eyes=1,
			id=6
		)
	),
	actuators=(
		TwoWheelActuator_1=(
			classname=simulation.robot.actuators.TwoWheelActuator,
			id=1
		),
		RecruiterActuator_2=(
			classname=simulation.robot.actuators.RecruiterActuator,
			range=0.8,
			id=2
		),
		RecruitedActuator_3=(
			classname=simulation.robot.actuators.RecruitedActuator,
			range=0.8,
			id=3
		)
	)
--random-seed
	6
--controllers
	classname=evolutionaryrobotics.neuralnetworks.NeuralNetworkController,
	network=(
		classname=evolutionaryrobotics.evolution.neat.NEATNeuralNetwork,
		inputs=(
			RecruitedNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.RecruitedNNInput,
				id=1
			),
			RecruiterNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.RecruiterNNInput,
				id=2
			),
			FocusingOnNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.FocusingOnNNInput,
				id=3
			),
			FocusedByNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.FocusedByNNInput,
				id=4
			),
			PreyNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.SensorNNInput,
				id=5
			),
			RobotNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.SensorNNInput,
				id=6
			),
			
		),
		outputs=(
			TwoWheelNNOutput=(
				classname=evolutionaryrobotics.neuralnetworks.outputs.TwoWheelNNOutput,
				id=1
			),
			RecruiterNNOutput=(
				classname=evolutionaryrobotics.neuralnetworks.outputs.RecruiterNNOutput,
				id=2
			),
			RecruitedNNOutput=(
				classname=evolutionaryrobotics.neuralnetworks.outputs.RecruitedNNOutput,
				id=3
			),
			
		)
	)
--evaluation
	classname=evolutionaryrobotics.evaluationfunctions.CooperativeForagingEvaluationFunction
--environment
	classname=simulation.environment.CooperativeForagingEnvironment,
	nestlimit=0.1,
	foragelimit=1,
	numberofpreys=6,
	width=2,
	height=2,
	steps=2000
--population load=CollectiveForraging-Social-MultipleTeams6/populations/population34,showbest
--random-seed -1338537749
